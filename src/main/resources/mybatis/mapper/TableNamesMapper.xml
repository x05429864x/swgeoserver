<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="it.geosolutions.swgeoserver.dao.TableNamesMapper">

	<sql id="table">tablenames</sql>

	<!-- 定义的resultMap，可以解决类的属性名和数据库列名不一致的问题-->
	<resultMap id="tablenamesMap" type="it.geosolutions.swgeoserver.entry.TableNames">
		<id property="id" column="id" jdbcType="BIGINT"/>
		<result property="nameCn" column="name_cn" jdbcType="VARCHAR" />
		<result property="nameEn" column="name_en" jdbcType="VARCHAR"  />
		<result property="workspace" column="workspace" jdbcType="VARCHAR"  />
		<result property="datastore" column="datastore" jdbcType="VARCHAR"  />
		<result property="center" column="center" jdbcType="VARCHAR"  />
		<result property="extractPath" column="extract_path" jdbcType="VARCHAR"  />
		<result property="state" column="state" jdbcType="BIGINT"  />
		<result property="creater" column="creater" jdbcType="BIGINT"  />
		<result property="createTime" column="create_time"  jdbcType="TIMESTAMP"/>
		<result property="updater" column="updater" jdbcType="BIGINT"  />
		<result property="updateTime" column="update_time"  jdbcType="TIMESTAMP"/>
		<result property="remark" column="remark" jdbcType="VARCHAR"  />
		<result property="flag" column="flag" jdbcType="INTEGER"  />
		<result property="isPublish" column="is_publish" jdbcType="INTEGER"  />
		<result property="md5" column="md5" jdbcType="VARCHAR"  />
		<result property="metadata" column="metadata" jdbcType="VARCHAR"  />
	</resultMap>

	<select id="findTableNames" parameterType="Map" resultType="TableNames">
		select * from <include refid="table"/>
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			<if test="state != null">
				AND state = #{state}
			</if>
			<if test="isPublish != null">
				AND is_publish = #{isPublish}
			</if>
		</trim>
		order by id
	</select>

	<select id="getPage"  resultMap="tablenamesMap">
		select * from <include refid="table"/> order by id
	</select>

	<select id="getByIds" resultType="TableNames" >
		select * from <include refid="table"/> where id in
		<foreach collection="array" item="item" index="index" open="(" separator="," close=")">
			#{item}
		</foreach>
	</select>

	<!-- 根据Name查询表名-->
	<select id="getByName" resultType="TableNames">
		select * from <include refid="table"/>
		<if test="_parameter != null">
			<where>
				name_cn = '${nameCn}' or name_en = '${nameEn}'
			</where>
		</if>
		order by id
	</select>

	<!-- 根据英文查询中文名称-->
	<select id="getTableNameByNameEn" resultType="TableNames">
		select * from <include refid="table"/>
		<if test="_parameter != null">
			<where>
				name_en like '%${nameEn}%'
			</where>
		</if>
		order by id
	</select>

	<!-- 查询数据库中已经导入的表名 -->
	<select id="findTableName" resultType="java.lang.String">
		SELECT tablename FROM pg_tables	WHERE tablename NOT LIKE 'pg%' AND tablename NOT LIKE 'sql_%' and tablename not like '%tablenames%' and schemaname = 'public'
	</select>

	<!-- 新增 -->
	<insert id="insertTableNames" parameterType="TableNames"
			keyColumn="id" keyProperty="id" useGeneratedKeys="true" >
		insert into <include refid="table"/>(name_cn,name_en,workspace,datastore,extract_path,creater,create_time,updater,update_time,state,remark,flag,is_publish,md5,metadata)
		values (#{nameCn},#{nameEn},#{workspace},#{datastore},#{extractPath},#{creater},#{createTime},#{updater},#{updateTime},#{state},#{remark},#{flag},#{isPublish},#{md5},#{metadata})
	</insert>

	<!-- 更新 -->
	<update id="updateTableNames" parameterType="TableNames">
		UPDATE <include refid="table"/>
		<trim prefix="set" suffixOverrides=",">
			<if test="nameCn!=null and nameCn !=''">name_cn=#{nameCn},</if>
			<if test="nameEn!=null and nameEn !=''">name_en=#{nameEn},</if>
			<if test="workspace!=null and workspace !=''">workspace=#{workspace},</if>
			<if test="datastore!=null and datastore !=''">datastore=#{datastore},</if>
			<if test="center!=null">center=#{center},</if>
			<if test="extractPath!=null and extractPath !=''">extract_path=#{extractPath},</if>
			<if test="creater!=null">creater=#{creater},</if>
			<if test="createTime!=null">create_time=#{createTime},</if>
			<if test="updater!=null and updater !=''">updater=#{updater},</if>
			<if test="updateTime!=null">update_time=#{updateTime},</if>
			<if test="state!=null and state !=''">state=#{state},</if>
			<if test="remark!=null and remark !=''">remark=#{remark},</if>
			<if test="flag!=null and flag !=''">flag=#{flag},</if>
			<if test="isPublish!=null and isPublish !=''">is_publish=#{isPublish},</if>
			<if test="md5!=null and md5 !=''">md5=#{md5},</if>
			<if test="metadata!=null and metadata !=''">metadata=#{metadata},</if>
		</trim>
		WHERE id = #{id}
	</update>

	<!-- 作废 -->
	<update id="updateState" parameterType="Long[]">
		<if test="_parameter != null">
			UPDATE <include refid="table"/> SET state = 1 ,update_time = now() where id in
			<foreach collection="array" item="id" index="index" open="(" separator="," close=")" >
				#{id}
			</foreach>
		</if>
	</update>

	<!-- 删除对照表数据 -->
	<delete id="deleteTableNames" parameterType="Long[]">
		delete from <include refid="table"/> where id in
		<foreach collection="array" item="id" index="index" open="(" separator="," close=")" >
			#{id}
		</foreach>
	</delete>

	<!-- 删除数据库中表-->
	<update id="dropTable" parameterType="String">
		<if test="_parameter != null">
			drop table ${names}
		</if>
	</update>

</mapper>

